<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Page">
        <Setter Property="Background" Value="#2e2940"></Setter>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="AboutProduct">
        
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="#2e2940"></Setter>
    </Style>
    
    <Style TargetType="ListBoxItem">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" Duration="0:0:1" From="360" To="370" AutoReverse="True" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button">
        <Setter Property="Background" Value="#413861"/>
        <Setter Property="BorderBrush" Value="#63588a"/>
        <Setter Property="Foreground" Value="#a69dc7"/>
        <Setter Property="FontSize" Value="20"/>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="#413861"/>
                    <Setter Property="FontSize" Value="25"/>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <DataTrigger Binding="{Binding ElementName=DiasblerCheckBox, Path=IsChecked}"
                        Value="True">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    
    <Style TargetType="TextBlock" x:Key="ShopTitle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Monotype Corsiva"/>
    </Style>


    <!--Define a template that creates a gradient-colored button.-->
    <Style TargetType="Button" x:Key="LangButtons">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
          x:Name="Border"  
          CornerRadius="20" 
          BorderThickness="1"
          BorderBrush="Black">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0.5" 
                                 EndPoint="1,0.5">
                                <GradientStop Color="{Binding Background.Color, 
                                   RelativeSource={RelativeSource TemplatedParent}}" 
                            Offset="0.0" />
                                <GradientStop Color="White" Offset="0.9" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter 
            Margin="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--Change the appearance of  the button when the user clicks it.-->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0.5" 
                                     EndPoint="1,0.5">
                                        <GradientStop Color="{Binding Background.Color, 
                    RelativeSource={RelativeSource TemplatedParent}}" 
                                Offset="0.0" />
                                        <GradientStop Color="DarkSlateGray" Offset="0.9" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
